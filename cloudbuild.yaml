# Cloud Build configuration with logging settings
options:
  logging: CLOUD_LOGGING_ONLY

# Define substitutions with default values
substitutions:
  _SERVICE_NAME: combo-backend
  _REGION: us-central1

# No availableSecrets - we'll use gcloud to access secrets directly

steps:
  # Create a temporary .env file with the secrets for the build
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Create .env file'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create backend directory if it doesn't exist
        mkdir -p backend
        
        # Get secrets from Secret Manager
        JWT_SECRET=$(gcloud secrets versions access latest --secret=JWT_SECRET --project=combo-624e1)
        FIREBASE_DATABASE_SECRET=$(gcloud secrets versions access latest --secret=FIREBASE_DATABASE_SECRET --project=combo-624e1)
        
        # Create .env file with all secrets
        cat > backend/.env <<EOL
JWT_SECRET=$JWT_SECRET
FIREBASE_DATABASE_SECRET=$FIREBASE_DATABASE_SECRET
FIREBASE_DATABASE_URL=https://combo-624e1-default-rtdb.firebaseio.com
EOL
        
        echo "Created .env file with all required secrets"

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker image'
    dir: 'backend'  # Run from the backend directory
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/combo-624e1/combo-repo/combo-backend:latest',
      '--no-cache',
      '--build-arg', 'NODE_ENV=production',
      '-f', 'Dockerfile',
      '.'
    ]

  # Push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker image'
    args: [
      'push',
      'us-central1-docker.pkg.dev/combo-624e1/combo-repo/combo-backend:latest'
    ]

  # Deploy to Cloud Run with secrets from Secret Manager
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Set environment variables
        export PROJECT_ID=combo-624e1
        export REGION=${_REGION}
        export SERVICE_NAME=${_SERVICE_NAME}
        export IMAGE=us-central1-docker.pkg.dev/combo-624e1/combo-repo/combo-backend:latest
        export FIREBASE_DATABASE_URL=https://combo-624e1-default-rtdb.firebaseio.com
        
        # Enable required services
        gcloud services enable run.googleapis.com \
          cloudbuild.googleapis.com \
          artifactregistry.googleapis.com \
          secretmanager.googleapis.com \
          --quiet || true
        
        # Deploy the service with environment variables
        gcloud run deploy $$SERVICE_NAME \
          --image=$$IMAGE \
          --region=$$REGION \
          --platform=managed \
          --allow-unauthenticated \
          --port=8080 \
          --memory=1Gi \
          --cpu=1 \
          --max-instances=10 \
          --timeout=300 \
          --update-env-vars="NODE_ENV=production,FIREBASE_DATABASE_URL=$$FIREBASE_DATABASE_URL" \
          --quiet

        # Get the service URL
        SERVICE_URL=$(gcloud run services describe $$SERVICE_NAME \
          --region $$REGION \
          --format 'value(status.url)')
        
        echo "Service deployed successfully to: $$SERVICE_URL"
        echo "Health check endpoint: $$SERVICE_URL/health"
        
        # Set the service URL as an output variable
        echo "SERVICE_URL=$$SERVICE_URL" > service-url.txt
