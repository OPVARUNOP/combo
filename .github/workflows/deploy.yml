name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: combo-624e1
  SERVICE_NAME: combo-backend
  REGION: us-central1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run database demo
        run: npm run demo:database

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud config set run/region ${{ env.REGION }}

      - name: Build and deploy to Cloud Run
        run: |
          gcloud builds submit --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}

          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8080 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10 \
            --timeout 300 \
            --set-env-vars FIREBASE_DATABASE_URL=https://combo-624e1-default-rtdb.firebaseio.com,FIREBASE_DATABASE_SECRET=${{ secrets.FIREBASE_DATABASE_SECRET }},JWT_SECRET=${{ secrets.JWT_SECRET }},NODE_ENV=production

      - name: Get service URL
        id: service-url
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format="value(status.url)")
          echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT

      - name: Test deployment
        run: |
          echo "🧪 Testing deployment..."
          curl -s ${{ steps.service-url.outputs.service_url }}/health | jq '.status' || echo "Health check failed"

      - name: Deployment complete
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🌐 Service URL: ${{ steps.service-url.outputs.service_url }}"
          echo "📊 Monitor at: https://console.cloud.google.com/run/detail/${{ env.REGION }}/${{ env.SERVICE_NAME }}/metrics"
